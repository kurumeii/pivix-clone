datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  type              String
  provider          String
  providerAccountId String?
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  post          Post[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime @map("expiresAt")
  id         String   @id @default(auto()) @map("_id") @db.ObjectId

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Post {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  email       String
  user        User    @relation(fields: [email], references: [email])
  title       String
  description String
  images      Image[]

  @@unique([title])
  @@map("post")
}

model Image {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  imageName String
  url       String
  postId    String
  post      Post   @relation(fields: [postId], references: [id])

  @@map("image")
}
